[FORMAT "WCOFF"]
[INSTRSET "i486p"]
[OPTIMIZE 1]
[OPTION 1]
[BITS 32]
	EXTERN	_io_hlt
[FILE "bootpack.c"]
	GLOBAL	_VramAddr
[SECTION .data]
	ALIGNB	4
_VramAddr:
	DD	655360
[SECTION .text]
	GLOBAL	_drawRect
_drawRect:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	PUSH	ESI
	PUSH	EBX
	PUSH	EDX
	MOV	ECX,DWORD [12+EBP]
	MOV	ESI,DWORD [16+EBP]
	LEA	EAX,DWORD [ESI+ECX*1]
	CMP	ECX,EAX
	JGE	L14
	MOV	EBX,ECX
	IMUL	EBX,EBX,320
L12:
	MOV	EDX,DWORD [8+EBP]
	LEA	EAX,DWORD [ESI+EDX*1]
	CMP	EDX,EAX
	JGE	L16
L11:
	MOV	EAX,DWORD [_VramAddr]
	ADD	EAX,EBX
	MOV	DWORD [-16+EBP],EAX
	MOV	AL,BYTE [24+EBP]
	MOV	EDI,DWORD [-16+EBP]
	MOV	BYTE [EDX+EDI*1],AL
	INC	EDX
	MOV	EAX,DWORD [8+EBP]
	ADD	EAX,ESI
	CMP	EDX,EAX
	JL	L11
L16:
	MOV	EAX,DWORD [12+EBP]
	INC	ECX
	ADD	EAX,ESI
	ADD	EBX,320
	CMP	ECX,EAX
	JL	L12
L14:
	POP	EAX
	POP	EBX
	POP	ESI
	POP	EDI
	POP	EBP
	RET
	GLOBAL	_HariMain
_HariMain:
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EBX
	XOR	ESI,ESI
	PUSH	15
	XOR	EBX,EBX
	PUSH	199
	PUSH	319
	PUSH	0
	PUSH	0
	CALL	_drawRect
	ADD	ESP,20
L22:
	LEA	EAX,DWORD [32+ESI]
	INC	ESI
	PUSH	EAX
	PUSH	50
	PUSH	50
	PUSH	EBX
	PUSH	EBX
	ADD	EBX,6
	CALL	_drawRect
	ADD	ESP,20
	CMP	ESI,31
	JLE	L22
L23:
	CALL	_io_hlt
	JMP	L23
	GLOBAL	_writeVram
_writeVram:
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EAX,DWORD [12+EBP]
	MOV	EDX,DWORD [8+EBP]
	IMUL	EAX,EAX,320
	ADD	EAX,DWORD [_VramAddr]
	MOV	ECX,DWORD [16+EBP]
	MOV	BYTE [EDX+EAX*1],CL
	POP	EBP
	RET
